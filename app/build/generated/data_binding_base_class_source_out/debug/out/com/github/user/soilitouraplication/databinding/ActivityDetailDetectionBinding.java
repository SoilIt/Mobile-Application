// Generated by view binder compiler. Do not edit!
package com.github.user.soilitouraplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.user.soilitouraplication.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailDetectionBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView datehistory;

  @NonNull
  public final Button detectSoilQuality;

  @NonNull
  public final ImageView ivresultsoil;

  @NonNull
  public final TextView moisture;

  @NonNull
  public final TextView plantRecommendation;

  @NonNull
  public final Button savehistory;

  @NonNull
  public final TextView soilCondition;

  @NonNull
  public final TextView soilDetail;

  @NonNull
  public final TextView soiltype;

  @NonNull
  public final TextView temperature;

  @NonNull
  public final TextView tvresultsoil;

  private ActivityDetailDetectionBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView datehistory, @NonNull Button detectSoilQuality,
      @NonNull ImageView ivresultsoil, @NonNull TextView moisture,
      @NonNull TextView plantRecommendation, @NonNull Button savehistory,
      @NonNull TextView soilCondition, @NonNull TextView soilDetail, @NonNull TextView soiltype,
      @NonNull TextView temperature, @NonNull TextView tvresultsoil) {
    this.rootView = rootView;
    this.datehistory = datehistory;
    this.detectSoilQuality = detectSoilQuality;
    this.ivresultsoil = ivresultsoil;
    this.moisture = moisture;
    this.plantRecommendation = plantRecommendation;
    this.savehistory = savehistory;
    this.soilCondition = soilCondition;
    this.soilDetail = soilDetail;
    this.soiltype = soiltype;
    this.temperature = temperature;
    this.tvresultsoil = tvresultsoil;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailDetectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailDetectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_detection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailDetectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.datehistory;
      TextView datehistory = ViewBindings.findChildViewById(rootView, id);
      if (datehistory == null) {
        break missingId;
      }

      id = R.id.detectSoilQuality;
      Button detectSoilQuality = ViewBindings.findChildViewById(rootView, id);
      if (detectSoilQuality == null) {
        break missingId;
      }

      id = R.id.ivresultsoil;
      ImageView ivresultsoil = ViewBindings.findChildViewById(rootView, id);
      if (ivresultsoil == null) {
        break missingId;
      }

      id = R.id.moisture;
      TextView moisture = ViewBindings.findChildViewById(rootView, id);
      if (moisture == null) {
        break missingId;
      }

      id = R.id.plantRecommendation;
      TextView plantRecommendation = ViewBindings.findChildViewById(rootView, id);
      if (plantRecommendation == null) {
        break missingId;
      }

      id = R.id.savehistory;
      Button savehistory = ViewBindings.findChildViewById(rootView, id);
      if (savehistory == null) {
        break missingId;
      }

      id = R.id.soilCondition;
      TextView soilCondition = ViewBindings.findChildViewById(rootView, id);
      if (soilCondition == null) {
        break missingId;
      }

      id = R.id.soilDetail;
      TextView soilDetail = ViewBindings.findChildViewById(rootView, id);
      if (soilDetail == null) {
        break missingId;
      }

      id = R.id.soiltype;
      TextView soiltype = ViewBindings.findChildViewById(rootView, id);
      if (soiltype == null) {
        break missingId;
      }

      id = R.id.temperature;
      TextView temperature = ViewBindings.findChildViewById(rootView, id);
      if (temperature == null) {
        break missingId;
      }

      id = R.id.tvresultsoil;
      TextView tvresultsoil = ViewBindings.findChildViewById(rootView, id);
      if (tvresultsoil == null) {
        break missingId;
      }

      return new ActivityDetailDetectionBinding((MaterialCardView) rootView, datehistory,
          detectSoilQuality, ivresultsoil, moisture, plantRecommendation, savehistory,
          soilCondition, soilDetail, soiltype, temperature, tvresultsoil);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
